# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main
#   pull_request:
#     branches:
#       - main

# jobs:
#   build:
#     # runs-on: ubuntu-latest # This will be replaced by the on-premise runner label if available1
#     runs-on: self-hosted
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: 0 # Disable shallow clone for SonarQube analysis

#     - name: Setup Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20.x' # Use a specific Node.js version

#     - name: Install dependencies
#       run: npm install

#     - name: SonarQube Scan
#       uses: SonarSource/sonarqube-scan-action@v5.0.0
#       env:
#         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#         SONAR_HOST_URL: http://localhost:9000
#       with:
#         projectBaseDir: . # Adjust if your project is in a subdirectoryyyy
#         args: >
#           -Dsonar.projectKey=myportfolio
#           -Dsonar.sources=.



name: CI/CD Pipeline with SonarQube + OWASP Dependency-Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Install Dependencies
      run: npm install

    # ✅ Dependency-Check Action (uses Docker, updates DB automatically)
    - name: OWASP Dependency-Check
      uses: dependency-check/Dependency-Check_Action@main
      id: Depcheck
      env:
        JAVA_HOME: /opt/jdk  # fix for JAVA_HOME error with self-hosted runners
      with:
        project: 'myportfolio'
        path: '.'  # directory to scan
        format: 'HTML,JSON'
        out: 'odc-reports'  # default is 'reports', override to keep clean
        args: >
          --failOnCVSS 0

    # Optional: Upload reports to GitHub artifacts
    - name: Upload Dependency-Check Reports
      uses: actions/upload-artifact@v4
      with:
        name: depcheck-report
        path: odc-reports/

    # ✅ SonarQube Scan with Dependency-Check Report Paths
    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v5.0.0
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: http://localhost:9000
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=myportfolio
          -Dsonar.sources=.
          -Dsonar.dependencyCheck.jsonReportPath=odc-reports/dependency-check-report.json
          -Dsonar.dependencyCheck.htmlReportPath=odc-reports/dependency-check-report.html
